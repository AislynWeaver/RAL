=head1 RECOMMENDED INSTALLATION

=head2 Overview

This document provides a detailed guide on the best-practice of configuring
RAL. Since RAL is written [nearly] entirely in PHP, you may be able to guess
what sort of tools I will be using:

=head3 On Reverse Proxy

=over 8

=item Nginx

For proxying requests and as a SSL termination proxy

=back

=head3 On Back-end Webserver

=over 8

=item lighttpd

Serve client requests when they are passed from nginx

=item MariaDB (or other MySQL provider)

MariaDB stores post and continuity info for RAL so that it is persistent
across reboots and accessible to any MySQL driver

=item PHP >= 5.1 (PHP provider)

Executes the RAL script. For RAL, PHP must be compiled with at least the
following components:

=over 8

=item MySQLi

Access to the MySQL database is possible through PHP's MySQLi interface.

=item SysV IPC (Inter-process Communication)

RAL calls C<shm_attach>, C<sem_attach>, and C<msg_get_queue> when
CONFIG_REALTIME_ENABLE is toggled. If you will not be toggling this, SysV
IPC is not necessary.

=back

=item fpm-PHP (PHP pool manager)

Provides greater flexibility for controlling the dynamic load and timouts of
a long-polling load

=item ImageMagick

PHP calls C<convert> and uses CONFIG_WORDLIST to generate random
I<robocheck> images to combat spam.

=back


         Internet
    _______|_|_______
    _______|_|_______ Firewall
           | |
           | |
           | |
    +------v--------+
    |     Nginx     |  Reverse proxy
    +--------^------+
           | | (plaintext)
           | | (http/1.1)
           | |
    +------v--------+
    |    Lighttpd   |  Back-end
    +--+---------+--+
       | fpm-PHP |
       +---------+

In our example, Nginx is the first stop for clients once they connect to the
server. Nginx will pass the client request on to lighttpd and send the client
lighttpd's response. We call such webservers I<reverse proxies> since it is
proxying a request on behalf of the client.

=head3 Example configurations

In C<docs/config/> you will find two folders. One of these folders holds
configurations for the reverse proxy, and the other holds configurations for
the back-end webserver.

All of these softwares may run on the same computer. In any case, nginx
B<MUST> be set to listen on either 80 (http:) or 443 (https:) for regular
web clients to easily connect to your server.

If you plan to deploy using C<CONFIG_REALTIME_ENABLE> (clients receive updates
from the site in real-time), nginx shoule provide http/2 capability. Without
this, a client may only receive updates in ~6 tabs at a time. This is a
quirk in the history of http/1.1 where browsers only allow ~6-8 parallel
connections to the same domain.

Further, if you decide to deploy using http/2 and C<CONFIG_REALTIME_ENABLE>
(which is recommended) remember that the modern interpretation of http/2
L<practically requires SSL|https://www.nginx.com/wp-content/uploads/2015/09/NGINX_HTTP2_White_Paper_v4.pdf>.
In this case, nginx will also act as a SSL termination proxy;
you will need to obtain an SSL certificate from a trusted CA in order to
provide adequate transport security.
