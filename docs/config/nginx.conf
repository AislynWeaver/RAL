http {
	# http: -> https:
	server { listen 80; server_name ral.space;
	return 302 https://ral.space$request_uri; }

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		server_name ral.howler.space;

		ssl on;
		ssl_certificate /etc/ssl/ral/fullchain.pem;
		ssl_certificate_key /etc/ssl/private/ral.pem;
		ssl_trusted_certificate /etc/ssl/ral/chain.pem;
		ssl_protocols TLSv1.2;
		ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;
		ssl_prefer_server_ciphers on;

		# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
		add_header Strict-Transport-Security max-age=15768000;

		# OCSP Stapling
		ssl_stapling on;
		ssl_stapling_verify on;

		location / {
			proxy_buffering off;
			gzip off;

			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_pass http://xxx.xxx.xxx.xxx/;
			proxy_http_version 1.1;

			client_body_timeout 1m;
			client_header_timeout 1m;
		}
	}
}
